/* unitz 0.4.0 - A unit parser, converter, & combiner in JS by Philip Diffenderfer */
!function(t,i){"function"==typeof define&&define.amd?define([],i):"object"==typeof module&&module.exports?module.exports=i():t.Unitz=i()}(this,function(){function t(t){return"string"==typeof t}function i(t){return null!==t&&"object"==typeof t}function e(t){return"number"==typeof t&&!isNaN(t)}function s(t){return t instanceof Array}function r(t){return e(t)&&Math.abs(Math.abs(t)-1)<z.epsilon}function n(t){return e(t)&&Math.abs(Math.floor(t)-t)<1e-8}function a(t,i){return t.substring(0,z.heuristicLength)===i.substring(0,z.heuristicLength)}function u(t,i){return i?t+" "+i:t}function o(r){return t(r)?r.split(z.separator):s(r)?r:i(r)||e(r)?[r]:[]}function b(s){return t(s)?d(s):i(s)?s:e(s)?G.fromNumber(s):!1}function d(t){var i=z.regex.exec(t),e=i[1],s=i[3],r=i[5],n=i[6],a=i[7].toLowerCase();if(!e&&!n&&!a)return!1;var u=1;if(e){u=parseInt(e);var o=0>u?-1:1;r?(r=parseInt(r),s?u+=parseInt(s)/r*o:u/=r):n&&(u+=parseFloat("0."+n)*o)}return new G(u,a,x[a],t)}function l(t,i,e){var s=b(t);if(s.unitClass){for(var r=null,n=null,a=s.unitClass.groups,o=0;o<a.length;o++){var d=a[o],l=s.convert(d.unit,!0);if(l.valid){var c=!r;if(r){var m=l.distance<=r.distance,p=l.string.length<=r.string.length,g=(l.actual+"").length<=(r.actual+"").length;m&&(i?p:g)&&(c=!0)}c&&(r=l,n=d)}}r&&(s===t?s=new G(r.actual,n.unit,s.unitClass):(s.value=r.actual,s.unit=n.unit,s.group=n),s.normal=i?u(r.string,n.getUnit(r.isSingular())):n.addUnit(r.actual))}return s}function c(t,e){var s=b(t);if(!i(s))return!1;var r=s.value,n=s.unitClass;if(!n&&!e)return r;if(!(n&&e in n.converters))return!1;if(n.groupMap[e]===n.groupMap[s.unit])return r;r*=n.converters[s.unit];var a=n.bases[s.unit],u=n.bases[e];return a!==u&&(r*=n.mapping[a][u]),r/=n.converters[e]}function m(t,i){for(var e="",s=0;s<t.length;s++){var r=t[s];r.length&&(""===e||i&&r.length<e.length||!i&&r.length>e.length)&&(e=r)}return e}function p(t,i,e,s){for(var n=o(t),d=o(i),c=n.concat(d),p=[],g=0;g<c.length;g++){var h=b(c[g]);h!==!1&&(h.units=[],h.units.push(h.unit),p.push(h))}for(var g=0;g<p.length-1;g++)for(var y=p[g],f=p.length-1;f>g;f--){var v=p[f],G=v.convert(y.unit);G!==!1&&y.group?(p.splice(f,1),y.value+=G):y.unit&&v.unit?a(y.unit,v.unit)&&(p.splice(f,1),y.value+=v.value,y.units=y.units.concat(v.units)):(p.splice(f,1),y.value+=v.value,y.units=y.units.concat(v.units))}for(var q=[],g=0;g<p.length;g++){var y=p[g];y.group?y.normal=y.group.addUnit(y.value):(y.unit=m(y.units,r(y.value)),y.normal=u(y.value,y.unit));var k=l(y,e,s);k&&k.normal&&q.push(k.normal)}return q.join(z.separatorJoin)}function g(t,i,e,s,n){for(var d=o(t),c=o(i),p=d.concat(c),g=[],h=0;h<p.length;h++){var y=b(p[h]);y!==!1&&(y.sign=h>=d.length?-1:1,y.units=[],y.units.push(y.unit),g.push(y))}for(var h=0;h<g.length-1;h++)for(var f=g[h],v=g.length-1;v>h;v--){var G=g[v],q=G.convert(f.unit),k=G.sign*f.sign;q!==!1&&f.group?(g.splice(v,1),f.value+=q*k):f.unit&&G.unit?a(f.unit,G.unit)&&(g.splice(v,1),f.value+=G.value*k,f.units=f.units.concat(G.units)):(g.splice(v,1),f.value+=G.value*k,f.units=f.units.concat(G.units))}for(var w=[],h=0;h<g.length;h++){var f=g[h];if(!(f.value<0||f.sign<0)||e){f.group?f.normal=f.group.addUnit(f.value):(f.unit=m(f.units,r(f.value)),f.normal=u(f.value,f.unit));var C=l(f,s,n);C&&C.normal&&w.push(C.normal)}}return w.join(z.separatorJoin)}function h(t,s,r,n){var a=b(t);if(!i(a)||!a.unitClass)return t;for(var u=a.unitClass.groups,o=a.conversions=[],d=0;d<u.length;d++){var l=u[d],c=a.convert(l.unit);if(e(c)&&!(e(s)&&s>c||e(r)&&c>r)){var m=new q(c,l.denominators,n);o.push(new k(c,m,l))}}return a}function y(t){C[t.className]=t,w.push(t);for(var i in t.converters)x[i]=t}function f(t){this.className=t,this.converters={},this.mapping={},this.bases={},this.groups=[],this.groupMap={}}function v(t,i,e,s,r,n,a){this.unit=t,this.baseUnit=i,this.baseScale=e,this.units=s,this.singular=r,this.plural=n,this.denominators=a}function G(t,i,e,s){this.value=t,this.unit=i,this.unitClass=e,this.group=e?e.groupMap[i]:null,this.normal=this.group?this.group.addUnit(t):s}function q(t,i,s){for(var r=Math.abs(Math.floor(t)-t),a=1,u=t,o=0;o<i.length&&r>z.epsilon;o++){var b=i[o],d=Math.round(t*b),l=Math.abs(d/b-t);if(e(s)&&b>s)break;l+z.epsilon<r&&(a=b,u=d,r=l)}this.value=t,this.numerator=u,this.denominator=a,this.actual=u/a,this.distance=r,this.whole=this.actual<0?Math.ceil(this.actual):Math.floor(this.actual),this.remainder=Math.abs(Math.round((t-this.whole)*a)),this.valid=1!==a||n(u),this.string="",1===a?this.string=u+"":0===this.whole?this.string=u+"/"+a:this.string=this.whole+" "+this.remainder+"/"+a}function k(t,i,e){this.decimal=t,this.fraction=i,this.group=e,this.shortUnit=e.unit,this.longUnit=i.valid?e.getUnit(i.isSingular()):e.getUnit(t),this.friendly=i.valid?i.string:t,this.shortNormal=u(this.friendly,this.shortUnit),this.longNormal=u(this.friendly,this.longUnit)}var z={},w=[],C={},x={};return f.prototype={addGroup:function(t,i,e,s,r,n){var a=e[0],u=a;i&&(t*=this.converters[i],u=this.bases[i]);for(var o=new v(a,u,t,e,r,n,s),b=0;b<e.length;b++){var d=e[b];this.converters[d]=t,this.bases[d]=u,this.groupMap[d]=o}return this.groups.push(o),o},addOneBaseConversion:function(t,i,e){t in this.mapping||(this.mapping[t]={}),this.mapping[t][i]=e},addBaseConversion:function(t,i,e){this.addOneBaseConversion(t,i,e),this.addOneBaseConversion(i,t,1/e)}},v.prototype={addUnit:function(t){return u(t,this.getUnit(t))},getUnit:function(t){return r(t)?this.singular:this.plural}},G.prototype={convert:function(t,r,n,a,o){var b=c(this,t);if(b!==!1&&r){var d=this.group?this.group.denominators:o;s(d)&&(b=new q(b,d,a),i(b)&&n&&t&&(b.string=u(b.string,t)))}return n&&e(b)&&t&&(b=u(b,t)),b},best:function(t,i){return l(this,t,i)}},G.fromNumber=function(t){return new G(t,"",null,t,null)},q.prototype={isSingular:function(){return 1===Math.ceil(Math.abs(this.actual))?1:0}},y(function(){var t=new f("Area");return t.addGroup(1,null,["sqin","sq. in.","sq in","in2","in^2","square inch","square inches"],[2,4,8,16],"square inch","square inches"),t.addGroup(144,"sqin",["sqft","sq. ft.","sq ft","ft2","ft^2","square foot","square feet"],[2,4,8,16],"square foot","square feet"),t.addGroup(9,"sqft",["sqyd","sq. yd.","sq yd","yd2","yd^2","square yard","square yards"],[2,3,4,8,9,16],"square yard","square yards"),t.addGroup(4840,"sqyd",["acre","acres"],[2,3,4,8,10],"acre","acres"),t.addGroup(640,"acre",["sqmi","sq. mi.","sq mi","mi2","mi^2","square mile","square miles"],[2,3,4,8,10],"square mile","square miles"),t.addGroup(1,null,["sqmm","sq. mm.","sq mm","mm2","mm^2","square millimeter","square millimeters"],[2,4,8,16],"square millimeter","square millimeters"),t.addGroup(100,"sqmm",["sqcm","sq. cm.","sq cm","cm2","cm^2","square centimeter","square centimeters"],[2,4,8,16],"square centimeter","square centimeters"),t.addGroup(1e4,"sqcm",["sqm","sq. m.","sq m","m2","m^2","square meter","square meters"],[2,4,8,16],"square meter","square meters"),t.addGroup(1e6,"sqm",["sqkm","sq. km.","sq km","km2","km^2","square kilometer","square kilometers"],[2,3,4,8,9,16],"square kilometer","square kilometers"),t.addBaseConversion("sqin","sqmm",645.16),t}()),y(function(){var t=new f("Digital");return t.addGroup(1,null,["bit","bits"],[],"bit","bits"),t.addGroup(4,"bit",["nibble","nibbles","nybble","nyble","half-byte","half byte","tetrade","semi-octet","quadbit","quartet"],[],"nibble","nibbles"),t.addGroup(8,"bit",["b","byte","bytes"],[2,8],"byte","bytes"),t.addGroup(1e3,"b",["kb","kilobyte","kilobytes"],[2,4,5,10],"kilobyte","kilobytes"),t.addGroup(1e3,"kb",["mb","megabyte","megabytes"],[2,4,5,10],"megabyte","megabytes"),t.addGroup(1e3,"mb",["gb","gigabyte","gigabytes"],[2,4,5,10],"gigabyte","gigabytes"),t.addGroup(1e3,"gb",["tb","terabyte","terabytes"],[2,4,5,10],"terabyte","terabytes"),t.addGroup(1e3,"tb",["pb","petabyte","petabytes"],[2,4,5,10],"petabyte","petabytes"),t.addGroup(1e3,"pb",["eb","exabyte","exabytes"],[2,4,5,10],"exabyte","exabytes"),t.addGroup(1e3,"eb",["zb","zettabyte","zettabytes"],[2,4,5,10],"zettabyte","zettabytes"),t.addGroup(1e3,"zb",["yb","yottabyte","yottabytes"],[2,4,5,10],"yottabyte","yottabytes"),t.addGroup(1024,"b",["kib","kibibyte","kibibytes"],[2,4,8,16],"kibibyte","kibibytes"),t.addGroup(1024,"kib",["mib","mebibyte","mebibytes"],[2,4,8,16],"mebibyte","mebibytes"),t.addGroup(1024,"mib",["gib","gibibyte","gibibytes"],[2,4,8,16],"gibibyte","gibibytes"),t.addGroup(1024,"gib",["tib","tebibyte","tebibytes"],[2,4,8,16],"tebibyte","tebibytes"),t.addGroup(1024,"tib",["pib","pebibyte","pebibytes"],[2,4,8,16],"pebibyte","pebibytes"),t.addGroup(1024,"pib",["eib","exbibyte","exbibytes"],[2,4,8,16],"exbibyte","exbibytes"),t.addGroup(1024,"eib",["zib","zebibyte","zebibytes"],[2,4,8,16],"zebibyte","zebibytes"),t.addGroup(1024,"zib",["yib","yobibyte","yobibytes"],[2,4,8,16],"yobibyte","yobibytes"),t.addGroup(1e3,"bit",["kbit","kilobit","kilobits"],[2,4,5,10],"kilobit","kilobits"),t.addGroup(1e3,"kbit",["mbit","megabit","megabits"],[2,4,5,10],"megabit","megabits"),t.addGroup(1e3,"mbit",["gbit","gigabit","gigabits"],[2,4,5,10],"gigabit","gigabits"),t.addGroup(1e3,"gbit",["tbit","terabit","terabits"],[2,4,5,10],"terabit","terabits"),t.addGroup(1e3,"tbit",["pbit","petabit","petabits"],[2,4,5,10],"petabit","petabits"),t.addGroup(1e3,"pbit",["ebit","exabit","exabits"],[2,4,5,10],"exabit","exabits"),t.addGroup(1e3,"ebit",["zbit","zettabit","zettabits"],[2,4,5,10],"zettabit","zettabits"),t.addGroup(1e3,"zbit",["ybit","yottabit","yottabits"],[2,4,5,10],"yottabit","yottabits"),t.addGroup(1024,"bit",["kibit","kibibit","kibibits"],[2,4,8,16],"kibibit","kibibits"),t.addGroup(1024,"kibit",["mibit","mebibit","mebibits"],[2,4,8,16],"mebibit","mebibits"),t.addGroup(1024,"mibit",["gibit","gibibit","gibibits"],[2,4,8,16],"gibibit","gibibits"),t.addGroup(1024,"gibit",["tibit","tebibit","tebibits"],[2,4,8,16],"tebibit","tebibits"),t.addGroup(1024,"tibit",["pibit","pebibit","pebibits"],[2,4,8,16],"pebibit","pebibits"),t.addGroup(1024,"pibit",["eibit","exbibit","exbibits"],[2,4,8,16],"exbibit","exbibits"),t.addGroup(1024,"eibit",["zibit","zebibit","zebibits"],[2,4,8,16],"zebibit","zebibits"),t.addGroup(1024,"zibit",["yibit","yobibit","yobibits"],[2,4,8,16],"yobibit","yobibits"),t}()),y(function(){var t=new f("Length");return t.addGroup(1,null,["in","inch","inches",'"'],[2,3,4,8,16,32],"inch","inches"),t.addGroup(12,"in",["ft","foot","feet","'"],[2,3,4,12],"foot","feet"),t.addGroup(3,"ft",["yd","yds","yard","yards"],[3],"yard","yards"),t.addGroup(5280,"ft",["mi","mile","miles"],[2,3,4,5,6,7,8,9,10],"mile","miles"),t.addGroup(3,"mi",["league","leagues"],[2,3,4,5,6,7,8,9,10],"league","leagues"),t.addGroup(1,null,["mm","millimeter","millimeters"],[10],"millimeter","millimeters"),t.addGroup(10,"mm",["cm","centimeter","centimeters"],[2,4,10],"centimeter","centimeters"),t.addGroup(10,"cm",["dc","decimeter","decimeters"],[10],"decimeter","decimeters"),t.addGroup(100,"cm",["m","meter","meters"],[2,3,4,5,10],"meter","meters"),t.addGroup(1e3,"m",["km","kilometer","kilometers"],[2,3,4,5,6,7,8,9,10],"kilometer","kilometers"),t.addBaseConversion("in","mm",25.4),t}()),y(function(){var t=new f("Rotation");return t.addGroup(1,null,["deg","degs","degree","degrees"],[],"degree","degrees"),t.addGroup(1,null,["rad","rads","radian","radians"],[],"radian","radians"),t.addBaseConversion("deg","rad",.0174533),t}()),y(function(){var t=new f("Time");return t.addGroup(1,null,["ns","nanosecond","nanoseconds","nano","nanos"],[10,100],"nanosecond","nanoseconds"),t.addGroup(1e3,"ns",["us","microsecond","microseconds","micros","micro"],[10,100,1e3],"microsecond","microseconds"),t.addGroup(1e3,"us",["ms","millisecond","milliseconds","millis"],[10,100,1e3],"millisecond","milliseconds"),t.addGroup(1e3,"ms",["s","second","seconds","sec","secs"],[2,10,100,1e3],"second","seconds"),t.addGroup(60,"s",["min","minute","minutes","mins"],[2,3,4,60],"minute","minutes"),t.addGroup(60,"min",["hr","hour","hours","hrs"],[2,3,4,60],"hour","hours"),t.addGroup(24,"hr",["day","days"],[2,3,4,6,24],"day","days"),t.addGroup(7,"day",["wk","week","weeks","wks"],[7],"week","weeks"),t.addGroup(365.2425,"day",["yr","year","years","yrs"],[2,3,4,6,12,52],"year","years"),t}()),y(function(){var t=new f("Volume");return t.addGroup(1,null,["tsp","ts","tsps","teaspoon","teaspoons"],[2,3,4],"teaspoon","teaspoons"),t.addGroup(3,"tsp",["tbsp","tbsps","tablespoon","tablespoons"],[2,3,4],"tablespoon","tablespoons"),t.addGroup(6,"tsp",["oz","ounce","ounces","fl-oz","fl oz","floz","fluid ounce","fl. oz.","oz. fl.","oz fl"],[2,3,6],"fluid ounce","fluid ounces"),t.addGroup(8,"oz",["c","cup","cups"],[2,3,4],"cup","cups"),t.addGroup(2,"c",["pt","pint","pints"],[2,4,8],"pint","pints"),t.addGroup(4,"c",["qt","quart","quarts"],[2,4,8],"quart","quarts"),t.addGroup(4,"qt",["gal","gallon","gallons"],[2,4,8,16],"gallon","gallons"),t.addGroup(1,null,["ml","millilitre","millilitres"],[2,10],"millilitre","millilitres"),t.addGroup(1e3,"ml",["l","litre","litres"],[2,10],"litre","litres"),t.addGroup(1,null,["mm3","mm^3","cubic mm","cubic millimeter","cubic millimeters"],[2,4,8],"cubic millimeter","cubic millimeters"),t.addGroup(1e3,"mm3",["cm3","cm^3","cubiccmm","cubic centimeter","cubic centimeters"],[2,4,8],"cubic centimeter","cubic centimeters"),t.addGroup(1e6,"cm3",["m3","m^3","cubic m","cubic meter","cubic meters"],[2,4,8],"cubic meter","cubic meters"),t.addGroup(1e9,"m3",["km3","km^3","cubic km","meter","meters"],[2,4,8],"meter","meters"),t.addGroup(1,null,["in3","in^3","cubic in","cubic inch","cubic inches"],[2,4,8],"cubic inch","cubic inches"),t.addGroup(1728,"in3",["ft3","ft^3","cubic ft","cubic foot","cubic feet"],[2,4,8],"cubic foot","cubic feet"),t.addGroup(27,"ft3",["yd3","yd^3","cubic yd","cubic yard","cubic yards"],[2,4,8],"cubic yard","cubic yards"),t.addBaseConversion("tsp","ml",4.92892),t.addBaseConversion("ml","mm3",1),t.addBaseConversion("tsp","in3",.300781),t}()),y(function(){var t=new f("Weight");return t.addGroup(1,null,["mg","milligram","milligrams"],[2,10],"milligram","milligrams"),t.addGroup(1e3,"mg",["g","gram","grams"],[2,10,100],"gram","grams"),t.addGroup(1e3,"g",["kg","kilogram","kilograms","kilo","kilos"],[2,10,100],"kilogram","kilograms"),t.addGroup(1,null,["oz","ounce","ounces"],[2,3,4,16],"ounce","ounces"),t.addGroup(16,"oz",["lb","lbs","pound","pounds"],[2,3,4,16],"pound","pounds"),t.addGroup(2e3,"lb",["ton","tons","tonnes"],[2,3,4,10],"ton","tons"),t.addBaseConversion("mg","oz",35274e-9),t}()),z.classes=w,z.classMap=C,z.unitToClass=x,z.regex=/^\s*(-?\d*)(\s+(\d+))?(\/(\d+)|\.(\d+)|)\s*(.*)\s*$/i,z.epsilon=.001,z.separator=",",z.separatorJoin=", ",z.heuristicLength=3,z.parse=d,z.parseInput=b,z.convert=c,z.best=l,z.splitInput=o,z.combine=p,z.subtract=g,z.isHeuristicMatch=a,z.conversions=h,z.isSingular=r,z.isWhole=n,z.findUnit=m,z.addClass=y,z.Class=f,z.Group=v,z.Parsed=G,z.Fraction=q,z});
//# sourceMappingURL=unitz.min.js.map
